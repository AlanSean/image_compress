# This is a basic workflow to help you get started with Actions
name: 'Windows Build'

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - dev
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        node-version: [12.18.0]
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

        
    - name: Install Dependencies
      run: yarn
    - name: Check lint
      run: yarn lint

    - name: Run headless unit test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            yarn test
            yarn e2e
        if: matrix.os == 'ubuntu-latest'
      - name: Run headless unit test
        with:
          run: |
            yarn test
            yarn e2e
        if: matrix.os !== 'ubuntu-latest'
