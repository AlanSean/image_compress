name: Terminal build more
on:
  push:
      branches:
       - dev
      pull_request:
        branches:
          - master
jobs:
  build:
  strategy:
    matrix:
      node-version: [12.x, 13.x]
      os: [ubuntu-latest, windows-latest, macos-latest]
  # The type of runner that the job will run on
  runs-on: ${{ matrix.os }}
  steps:
    - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Check out repository code
      uses: actions/checkout@v2
    - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo "🖥️ The workflow is now ready to test your code on the runner."
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}
    - run: echo "🍏 This job's status is ${{ job.status }}."
    # strategy:
    #   matrix:
    #     node-version: [12.x]
    #     os: [ubuntu-latest, windows-latest, macos-latest]
    # # The type of runner that the job will run on
    # runs-on: ${{ matrix.os }}
    # steps:
    #   - uses: actions/checkout@v2
    #   - name: Get yarn cache directory path
    #     id: yarn-cache-dir-path
    #     run: echo "::set-output name=dir::$(yarn cache dir)"
    #   - uses: actions/cache@v2
    #     id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    #     with:
    #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
    #       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    #       restore-keys: |
    #         ${{ runner.os }}-yarn-
    #   - name: Use Node.js ${{ matrix.node-version }}
    #     uses: actions/setup-node@v1
    #     with:
    #       node-version: ${{ matrix.node-version }}
    #   - name: Install Dependencies
    #     run: yarn
    #   - name: Check lint
    #     run: yarn lint
    #   - name: Run headless unit test
    #     uses: GabrielBB/xvfb-action@v1
    #     with:
    #       run: |
    #         yarn test
    #         yarn e2e
    #     if: matrix.os == 'ubuntu-latest'
    #   - name: Run headless unit test
    #     with:
    #       run: |
    #         yarn test
    #         yarn e2e
    #     if: matrix.os !== 'ubuntu-latest'
